#Framework for future code compression
    def UniUrlBuilder(self, myGetWeb, mymodel, urlchq, cpath, dlFilter, extraURL):
        print("Getting Src...")
        #get html page
        if not os.path.exists(cpath):
            #print(mymodel+" : "+ urlchq)
            prodURL = str(self.searchforlink(mymodel, urlchq))
            if not prodURL.endswith(extraURL) and prodURL != "None":
                prodURL += extraURL
            print("Src URL: "+prodURL)
            if not prodURL == "None":
                print("Getting URL...")
                soup_html = self.getwebwithjs(prodURL)
                #print(soup_html)
                for link in soup_html.find_all('a', attrs={'href': re.compile(dlFilter)}):
                    print("Found the URL:", link['href'])
                    if self.dlBIOS(link, cpath):
                        break  
                    else:
                        pass
            else:
                print("Error in getting Src URL")      
        else:
            print("already Downloaded\n")